package N1BasicsProgJava.N4ConsoleInputOutput;

public class ConsoleOutput {
    public static void main(String[] args) {
        // Для создания потока вывода в класс System определен объект out. В этом
        // объекте определен метод println, который позволяет вывести на консоль
        // некоторое значение с последующим переходом на новую строку. Например:
        System.out.println("Первая строка");
        System.out.println("Вторая строка...");

        // При необходимости можно и не переводить курсор на следующую строку. В этом
        // случае используется меод System.out.print(), который аналогичен println за
        // тем исключением, что не осуществляет перевод на следующую строку.

        System.out.print("Первая строка");
        System.out.print(" продолжение второй строки");

        // Но с print() можно осуществить перевод на следующую строку с помощью \n.

        // Нередко необходимо подставлять в строку какие-нибудь данные. например, у нас
        // есть два числа, и мы хотим вывести их значения на экран. В этом случае мы
        // можем, например написать так:

        int x = 5;
        int y = 6;
        System.out.println("x=" + x + "; y=" + y);

        // Но в Java есть также функция для форматированного вывода, уналедованная из
        // языка С: System.out.printf(). С ее помощью мы можем переписать предыдущий
        // пример следующим образом:

        int q = 5;
        int w = 6;
        System.out.printf("x=%d, y=%d\n", x, y);

        // В данном случае символы %d обозначает спецификатор, вместо которого
        // подставляет один из аргументов. Спецификаторов и соответствующих им
        // аргументов может быть возможно. В данном случае у нас только два аргумента,
        // поэтому вместо первого %d подставляется значение переменной х, а вместо
        // второго - значение переменной y. Сама буква d означает, что данный
        // спецификатор будет использоваться для вывода целочисленных значений.

        // Кроме спецификатора %d мы можем использовать еще ряд спецификаторов для
        // других типов данных:

        // %x: для вывода шестнадцатеричных чисел

        // %f: для вывода чисел с плавающей точкой

        // %e: для вывода чисел в экспоненциальной форме, например, 1.3e+01

        // %c: для вывода одиночного символа

        // %s: для вывода строковых значений

        String name = "Tom";
        int age = 30;
        float height = 1.7f;
          
        System.out.printf("Name: %s  Age: %d  Height: %.2f \n", name, age, height);

        //%.2f означает, что после запятой будет 2 знака

    }
}
